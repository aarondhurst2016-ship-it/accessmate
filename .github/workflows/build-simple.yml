name: Build All Platforms (Simplified)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

env:
  PYTHON_VERSION: '3.11'
  APP_VERSION: '1.0.0'

jobs:
  # Windows Build - Most Reliable
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        
    - name: Create simple build script
      run: |
        echo 'import os
        from PIL import Image
        import shutil
        
        # Create dist directory
        os.makedirs("dist", exist_ok=True)
        
        # Simple executable creation
        print("Building Windows executable...")
        import subprocess
        result = subprocess.run([
            "pyinstaller", 
            "--onefile",
            "--windowed", 
            "--name=AccessMate",
            "--icon=src/accessmate_logo.ico",
            "src/main.py"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Build successful")
        else:
            print("‚ùå Build failed:", result.stderr)
            exit(1)
        ' > simple_build.py
        
    - name: Build Windows executable  
      run: python simple_build.py
      
    - name: Test build output
      run: |
        if (Test-Path "dist/AccessMate.exe") {
          Write-Host "‚úÖ Windows build successful"
          dir dist/
        } else {
          Write-Host "‚ùå Build failed - no executable found"
          exit 1
        }
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: AccessMate-Windows
        path: dist/AccessMate.exe
        retention-days: 7

  # Linux Build - Usually Most Stable
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --name=accessmate src/main.py
        
    - name: Test build output
      run: |
        if [ -f "dist/accessmate" ]; then
          echo "‚úÖ Linux build successful"
          ls -lh dist/
        else
          echo "‚ùå Build failed - no executable found"
          exit 1
        fi
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: AccessMate-Linux
        path: dist/accessmate
        retention-days: 7

  # Android Build - Most Complex, Skip for Now
  # build-android:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Skip Android for now
  #     run: echo "Android build temporarily disabled for debugging"

  # macOS Build
  build-macos:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        
    - name: Build macOS executable
      run: |
        pyinstaller --onefile --windowed --name=AccessMate src/main.py
        
    - name: Test build output
      run: |
        if [ -f "dist/AccessMate" ]; then
          echo "‚úÖ macOS build successful"
          ls -lh dist/
        else
          echo "‚ùå Build failed - no executable found"
          exit 1
        fi
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: AccessMate-macOS
        path: dist/AccessMate
        retention-days: 7

  # Simple build summary
  build-summary:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Build Summary
      run: |
        echo "üéâ Build Summary:"
        echo "Windows: ${{ needs.build-windows.result }}"
        echo "Linux: ${{ needs.build-linux.result }}"
        echo "macOS: ${{ needs.build-macos.result }}"
        
        if [ "${{ needs.build-windows.result }}" = "success" ] && 
           [ "${{ needs.build-linux.result }}" = "success" ] && 
           [ "${{ needs.build-macos.result }}" = "success" ]; then
          echo "‚úÖ All core platforms built successfully!"
        else
          echo "‚ö†Ô∏è Some builds failed - check individual jobs"
        fi